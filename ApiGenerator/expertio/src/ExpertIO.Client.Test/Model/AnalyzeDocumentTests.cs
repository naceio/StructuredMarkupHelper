/* 
 * expert.ai Natural Language API
 *
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * The version of the OpenAPI document: v2
 * Contact: api.inquiry@expert.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ExpertIO.Client.Api;
using ExpertIO.Client.Model;
using ExpertIO.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ExpertIO.Client.Test
{
    /// <summary>
    ///  Class for testing AnalyzeDocument
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AnalyzeDocumentTests
    {
        // TODO uncomment below to declare an instance variable for AnalyzeDocument
        //private AnalyzeDocument instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of AnalyzeDocument
            //instance = new AnalyzeDocument();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnalyzeDocument
        /// </summary>
        [Test]
        public void AnalyzeDocumentInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" AnalyzeDocument
            //Assert.IsInstanceOf(typeof(AnalyzeDocument), instance);
        }


        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Test]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }
        /// <summary>
        /// Test the property 'Language'
        /// </summary>
        [Test]
        public void LanguageTest()
        {
            // TODO unit test for the property 'Language'
        }
        /// <summary>
        /// Test the property 'Paragraphs'
        /// </summary>
        [Test]
        public void ParagraphsTest()
        {
            // TODO unit test for the property 'Paragraphs'
        }
        /// <summary>
        /// Test the property 'Sentences'
        /// </summary>
        [Test]
        public void SentencesTest()
        {
            // TODO unit test for the property 'Sentences'
        }
        /// <summary>
        /// Test the property 'Phrases'
        /// </summary>
        [Test]
        public void PhrasesTest()
        {
            // TODO unit test for the property 'Phrases'
        }
        /// <summary>
        /// Test the property 'Tokens'
        /// </summary>
        [Test]
        public void TokensTest()
        {
            // TODO unit test for the property 'Tokens'
        }
        /// <summary>
        /// Test the property 'MainSentences'
        /// </summary>
        [Test]
        public void MainSentencesTest()
        {
            // TODO unit test for the property 'MainSentences'
        }
        /// <summary>
        /// Test the property 'MainPhrases'
        /// </summary>
        [Test]
        public void MainPhrasesTest()
        {
            // TODO unit test for the property 'MainPhrases'
        }
        /// <summary>
        /// Test the property 'MainLemmas'
        /// </summary>
        [Test]
        public void MainLemmasTest()
        {
            // TODO unit test for the property 'MainLemmas'
        }
        /// <summary>
        /// Test the property 'MainSyncons'
        /// </summary>
        [Test]
        public void MainSynconsTest()
        {
            // TODO unit test for the property 'MainSyncons'
        }
        /// <summary>
        /// Test the property 'Entities'
        /// </summary>
        [Test]
        public void EntitiesTest()
        {
            // TODO unit test for the property 'Entities'
        }
        /// <summary>
        /// Test the property 'Topics'
        /// </summary>
        [Test]
        public void TopicsTest()
        {
            // TODO unit test for the property 'Topics'
        }
        /// <summary>
        /// Test the property 'Knowledge'
        /// </summary>
        [Test]
        public void KnowledgeTest()
        {
            // TODO unit test for the property 'Knowledge'
        }
        /// <summary>
        /// Test the property 'Sentiment'
        /// </summary>
        [Test]
        public void SentimentTest()
        {
            // TODO unit test for the property 'Sentiment'
        }
        /// <summary>
        /// Test the property 'Relations'
        /// </summary>
        [Test]
        public void RelationsTest()
        {
            // TODO unit test for the property 'Relations'
        }

    }

}
