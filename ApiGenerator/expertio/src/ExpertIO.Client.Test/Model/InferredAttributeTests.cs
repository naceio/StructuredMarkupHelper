/* 
 * expert.ai Natural Language API
 *
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * The version of the OpenAPI document: v2
 * Contact: api.inquiry@expert.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ExpertIO.Client.Api;
using ExpertIO.Client.Model;
using ExpertIO.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ExpertIO.Client.Test
{
    /// <summary>
    ///  Class for testing InferredAttribute
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InferredAttributeTests
    {
        // TODO uncomment below to declare an instance variable for InferredAttribute
        //private InferredAttribute instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InferredAttribute
            //instance = new InferredAttribute();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InferredAttribute
        /// </summary>
        [Test]
        public void InferredAttributeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" InferredAttribute
            //Assert.IsInstanceOf(typeof(InferredAttribute), instance);
        }


        /// <summary>
        /// Test the property 'Attribute'
        /// </summary>
        [Test]
        public void AttributeTest()
        {
            // TODO unit test for the property 'Attribute'
        }
        /// <summary>
        /// Test the property 'Lemma'
        /// </summary>
        [Test]
        public void LemmaTest()
        {
            // TODO unit test for the property 'Lemma'
        }
        /// <summary>
        /// Test the property 'Syncon'
        /// </summary>
        [Test]
        public void SynconTest()
        {
            // TODO unit test for the property 'Syncon'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Test]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

    }

}
