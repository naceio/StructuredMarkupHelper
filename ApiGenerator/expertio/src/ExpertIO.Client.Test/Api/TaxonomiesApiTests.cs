/* 
 * expert.ai Natural Language API
 *
 * Natural Language API provides a comprehensive set of natural language understanding capabilities based on expert.ai technology: <ul>   <li>Text subdivision</li>   <li>Part-of-speech tagging</li>   <li>Syntactic analysis</li>   <li>Lemmatization</li>   <li>Keyphrase extraction</li>   <li>Semantic analysis</li>   <li>Named entity recognition</li>   <li>Relation extraction</li>   <li>Sentiment analysis</li>   <li>Classification</li> </ul> 
 *
 * The version of the OpenAPI document: v2
 * Contact: api.inquiry@expert.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ExpertIO.Client.Client;
using ExpertIO.Client.Api;
using ExpertIO.Client.Model;

namespace ExpertIO.Client.Test
{
    /// <summary>
    ///  Class for testing TaxonomiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaxonomiesApiTests
    {
        private TaxonomiesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaxonomiesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaxonomiesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TaxonomiesApi
            //Assert.IsInstanceOf(typeof(TaxonomiesApi), instance);
        }

        
        /// <summary>
        /// Test TaxonomiesGet
        /// </summary>
        [Test]
        public void TaxonomiesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.TaxonomiesGet();
            //Assert.IsInstanceOf(typeof(TaxonomiesResponse), response, "response is TaxonomiesResponse");
        }
        
        /// <summary>
        /// Test TaxonomiesTaxonomyLanguageGet
        /// </summary>
        [Test]
        public void TaxonomiesTaxonomyLanguageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string taxonomy = null;
            //string language = null;
            //var response = instance.TaxonomiesTaxonomyLanguageGet(taxonomy, language);
            //Assert.IsInstanceOf(typeof(TaxonomyResponse), response, "response is TaxonomyResponse");
        }
        
    }

}
